function solution(numbers, target) {
  // 깊이 우선 탐색(DFS) 함수 정의
  function dfs(index, sum) {
    // 배열의 길이가 끝나면 함수 종료
    if (index === numbers.length) {
      // 종료 후 합(sum)이 target과 같다면 경우의 수 1을 반환, 아니면 0 반환
      return sum === target ? 1 : 0;
    }

    // 재귀 호출
    // 현재 index의 숫자를 더한 경우 탐색
    const plus = dfs(index + 1, sum + numbers[index]);

    // 현재 index의 숫자를 뺀 경우 탐색
    const minus = dfs(index + 1, sum - numbers[index]);

    // 모든 가능한 경우의 수를 합산해 반환
    return plus + minus;
  }

  // DFS 탐색을 0번 인덱스부터 시작, 초기 합계는 0
  return dfs(0, 0);
}
